{"version":3,"sources":["../index.js"],"names":["shallowCompare","debounce","create","a","b","Array","length","aKeys","Object","keys","every","key","interval","callback","timerId","clearTimeout","args","setTimeout","initialState","currentState","subscribers","app","update","arguments","newState","draft","console","log","forEach","subscriber","invoke","action","subscribe","push","index","indexOf","splice","async","statusUpdate","promise","state","status","payload","undefined","then","Promise","resolve","error","ex","component","stateToProps","Component","updateProp","props","invoker","defaltArgs","invokerData","concat","onDidMount","onWillUnmount","onRender","mappedProps","assign","hasChange","unsubscribe","forceUpdate","nextProps","React","createElement"],"mappings":";;;;;;;;QAGgBA,c,GAAAA,c;QASAC,Q,GAAAA,Q;QAQAC,M,GAAAA,M;;AApBhB;;;;AACA;;;;;;;;;;;;;;;;AAEO,SAASF,cAAT,CAAwBG,CAAxB,EAA2BC,CAA3B,EAA8B;AACnC,MAAI,CAACD,CAAD,IAAMC,CAAV,EAAa,OAAO,KAAP;AACb,MAAID,KAAK,CAACC,CAAV,EAAa,OAAO,KAAP;AACb,MAAID,aAAaE,KAAb,IAAsBF,EAAEG,MAAF,KAAaF,EAAEE,MAAzC,EAAiD,OAAO,KAAP;AACjD,MAAMC,QAAQC,OAAOC,IAAP,CAAYN,CAAZ,CAAd;AACA,MAAII,MAAMD,MAAN,KAAiBE,OAAOC,IAAP,CAAYL,CAAZ,EAAeE,MAApC,EAA4C,OAAO,KAAP;AAC5C,SAAOC,MAAMG,KAAN,CAAY;AAAA,WAAOP,EAAEQ,GAAF,MAAWP,EAAEO,GAAF,CAAlB;AAAA,GAAZ,CAAP;AACD;;AAEM,SAASV,QAAT,CAAkBW,QAAlB,EAA4BC,QAA5B,EAAsC;AAC3C,MAAIC,gBAAJ;AACA,SAAO,YAAmB;AACxBC,iBAAaD,OAAb;;AADwB,sCAANE,IAAM;AAANA,UAAM;AAAA;;AAExBF,cAAUG,6BAAWJ,QAAX,EAAqBD,QAArB,SAAkCI,IAAlC,EAAV;AACD,GAHD;AAID;;AAEM,SAASd,MAAT,GAAmC;AAAA,MAAnBgB,YAAmB,uEAAJ,EAAI;;AACxC,MAAIC,eAAeD,YAAnB;AACA,MAAME,cAAc,EAApB;AACA,MAAMC,MAAM,SAANA,GAAM,CAAUC,MAAV,EAAkB;AAC5B,QAAI,CAACC,UAAUjB,MAAf,EAAuB,OAAOa,YAAP;AACvB,QAAMK,WAAW,qBAAQL,YAAR,EAAsB,iBAAS;AAC9CG,aAAOG,KAAP;AACD,KAFgB,CAAjB;AAGA,QAAID,aAAaL,YAAjB,EAA+B;AAC7BA,qBAAeK,QAAf;AACAE,cAAQC,GAAR,CAAY,eAAZ,EAA6BR,YAA7B;AACAC,kBAAYQ,OAAZ,CAAoB;AAAA,eAAcC,WAAWV,YAAX,CAAd;AAAA,OAApB;AACD;AACD,WAAOE,GAAP;AACD,GAXD;;AAaA,WAASS,MAAT,CAAgBC,MAAhB,EAAiC;AAAA,uCAANf,IAAM;AAANA,UAAM;AAAA;;AAC/B,WAAOe,yBAAOV,GAAP,SAAeL,IAAf,EAAP;AACD;;AAED,WAASgB,SAAT,CAAmBH,UAAnB,EAA+B;AAC7BT,gBAAYa,IAAZ,CAAiBJ,UAAjB;AACA,WAAO,YAAY;AACjB,UAAMK,QAAQd,YAAYe,OAAZ,CAAoBN,UAApB,CAAd;AACA,UAAIK,UAAU,CAAC,CAAf,EAAkB;AAChBd,oBAAYgB,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;AACF,KALD;AAMD;;AAED,WAASG,KAAT,CAAeC,YAAf,EAA6BC,OAA7B,EAAsC;AACpC,QAAMzB,UAAUG,WAAW;AAAA,aACzBI,IAAI;AAAA,eACFiB,aAAaE,KAAb,EAAoB;AAClBC,kBAAQ,SADU;AAElBC,mBAASC;AAFS,SAApB,CADE;AAAA,OAAJ,CADyB;AAAA,KAAX,CAAhB;;AASA,QAAI,CAACJ,OAAD,IAAY,CAACA,QAAQK,IAAzB,EAA+B;AAC7BL,gBAAUM,QAAQC,OAAR,CAAgBP,OAAhB,CAAV;AACD;;AAED,WAAOA,QAAQK,IAAR,CAAa,mBAAW;AAC7B7B,mBAAaD,OAAb;AACAO,UAAI;AAAA,eACFiB,aAAaE,KAAb,EAAoB;AAClBC,kBAAQ,QADU;AAElBC;AAFkB,SAApB,CADE;AAAA,OAAJ;AAMD,KARM,EAQJ,cAAM;AACP3B,mBAAaD,OAAb;AACAO,UAAI;AAAA,eACFiB,aAAaE,KAAb,EAAoB;AAClBC,kBAAQ,QADU;AAElBM,iBAAOC;AAFW,SAApB,CADE;AAAA,OAAJ;AAMD,KAhBM,CAAP;AAiBD;;AAED;;;;AAIA,WAASC,SAAT,CAAmBC,YAAnB,EAAiCC,SAAjC,EAA4C;AAC1C;AAAA;;AACE,kCAAqB;AAAA;;AAAA;;AAAA,2CAANnC,IAAM;AAANA,cAAM;AAAA;;AAAA,mKACVA,IADU;;AAGnB,cAAKoC,UAAL,CAAgB,MAAKC,KAArB;AAHmB;AAIpB;;AALH;AAAA;AAAA,mCAOaA,KAPb,EAOoB;AAAA,sBAEhBH,aAAa/B,YAAb,EAA2BkC,KAA3B,EAAkC;AAChCb,mBAAO,KAAKA,KADoB;AAEhCV,0BAFgC;AAGhCwB,mBAHgC,mBAGxBvB,MAHwB,EAGD;AAAA,iDAAZwB,UAAY;AAAZA,0BAAY;AAAA;;AAC7B,kBAAMC,cAAc,EAACzB,cAAD,EAASf,MAAMuC,UAAf,EAApB;AACA,kBACExB,OAAOyB,WAAP,KACAA,YAAYzB,MAAZ,KAAuBA,MADvB,IAEA/B,eAAeuD,UAAf,EAA2BxB,OAAOyB,WAAP,EAAoBxC,IAA/C,CAHF,EAKE,OAAOe,OAAOyB,WAAP,CAAP;AACFzB,qBAAOyB,WAAP,IAAsBA,WAAtB;AACA,qBAAO,YAAmB;AAAA,mDAANxC,IAAM;AAANA,sBAAM;AAAA;;AACxB,uBAAOc,yBAAOC,MAAP,4BAAkBwB,WAAWE,MAAX,CAAkBzC,IAAlB,CAAlB,GAAP;AACD,eAFD;AAGD;AAf+B,WAAlC,KAgBMqC,KAlBU;AAAA,cACTK,UADS,SACTA,UADS;AAAA,cACGC,aADH,SACGA,aADH;AAAA,cACkBC,QADlB,SACkBA,QADlB;AAAA,cAC+BC,WAD/B;;AAmBhBrD,iBAAOsD,MAAP,CAAc,IAAd,EAAoB;AAClBJ,kCADkB;AAElBC,wCAFkB;AAGlBC;AAHkB,WAApB;AAKA,cAAMG,YAAY,CAAC/D,eAAe6D,WAAf,EAA4B,KAAKA,WAAjC,CAAnB;AACA,cAAIE,SAAJ,EAAe;AACb,iBAAKF,WAAL,GAAmBA,WAAnB;AACD;AACD,iBAAOE,SAAP;AACD;AApCH;AAAA;AAAA,4CAsCsB;AAAA;;AAClB,cAAI,KAAKL,UAAT,EAAqB;AACnB,iBAAKA,UAAL,CAAgB,IAAhB;AACD;AACD,eAAKM,WAAL,GAAmBhC,UAAU,YAAM;AACjC,gBAAI,CAAC,OAAKoB,UAAL,CAAgB,OAAKC,KAArB,CAAL,EAAkC,OAAO,KAAP;AAClC,mBAAKY,WAAL;AACD,WAHkB,CAAnB;AAID;AA9CH;AAAA;AAAA,+CAgDyB;AACrB,cAAI,KAAKN,aAAT,EAAwB;AACtB,iBAAKA,aAAL,CAAmB,IAAnB;AACD;AACD,eAAKK,WAAL;AACD;AArDH;AAAA;AAAA,8CAuDwBE,SAvDxB,EAuDmC;AAC/B,iBAAO,KAAKd,UAAL,CAAgBc,SAAhB,CAAP;AACD;AAzDH;AAAA;AAAA,iCA2DW;AACP,cAAI,KAAKN,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAc,IAAd;AACD;AACD,iBAAOO,gBAAMC,aAAN,CAAoBjB,SAApB,EAA+B,KAAKU,WAApC,CAAP;AACD;AAhEH;;AAAA;AAAA,MAAsCM,gBAAMhB,SAA5C;AAkED;;AAED,SAAO3C,OAAOsD,MAAP,CAAczC,GAAd,EAAmB;AACxBW,wBADwB;AAExBiB,wBAFwB;AAGxBZ,gBAHwB;AAIxBP;AAJwB,GAAnB,CAAP;AAMD","file":"index.js","sourcesContent":["import React from 'react';\r\nimport produce from 'immer';\r\n\r\nexport function shallowCompare(a, b) {\r\n  if (!a && b) return false;\r\n  if (a && !b) return false;\r\n  if (a instanceof Array && a.length !== b.length) return false;\r\n  const aKeys = Object.keys(a);\r\n  if (aKeys.length !== Object.keys(b).length) return false;\r\n  return aKeys.every(key => a[key] === b[key]);\r\n}\r\n\r\nexport function debounce(interval, callback) {\r\n  let timerId;\r\n  return function (...args) {\r\n    clearTimeout(timerId);\r\n    timerId = setTimeout(callback, interval, ...args);\r\n  };\r\n}\r\n\r\nexport function create(initialState = {}) {\r\n  let currentState = initialState;\r\n  const subscribers = [];\r\n  const app = function (update) {\r\n    if (!arguments.length) return currentState;\r\n    const newState = produce(currentState, draft => {\r\n      update(draft);\r\n    });\r\n    if (newState !== currentState) {\r\n      currentState = newState;\r\n      console.log('state-changed', currentState);\r\n      subscribers.forEach(subscriber => subscriber(currentState));\r\n    }\r\n    return app;\r\n  };\r\n\r\n  function invoke(action, ...args) {\r\n    return action(app, ...args);\r\n  }\r\n\r\n  function subscribe(subscriber) {\r\n    subscribers.push(subscriber);\r\n    return function () {\r\n      const index = subscribers.indexOf(subscriber);\r\n      if (index !== -1) {\r\n        subscribers.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  function async(statusUpdate, promise) {\r\n    const timerId = setTimeout(() =>\r\n      app(state =>\r\n        statusUpdate(state, {\r\n          status: 'loading',\r\n          payload: undefined\r\n        })\r\n      )\r\n    );\r\n\r\n    if (!promise || !promise.then) {\r\n      promise = Promise.resolve(promise);\r\n    }\r\n\r\n    return promise.then(payload => {\r\n      clearTimeout(timerId);\r\n      app(state =>\r\n        statusUpdate(state, {\r\n          status: 'loaded',\r\n          payload\r\n        })\r\n      );\r\n    }, ex => {\r\n      clearTimeout(timerId);\r\n      app(state =>\r\n        statusUpdate(state, {\r\n          status: 'failed',\r\n          error: ex\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * create a component with specific stateToProps callback\r\n   * the component will update once app state changed\r\n   */\r\n  function component(stateToProps, Component) {\r\n    return class ComponentWrapper extends React.Component {\r\n      constructor(...args) {\r\n        super(...args);\r\n\r\n        this.updateProp(this.props);\r\n      }\r\n\r\n      updateProp(props) {\r\n        const {onDidMount, onWillUnmount, onRender, ...mappedProps} =\r\n        stateToProps(currentState, props, {\r\n          state: this.state,\r\n          invoke,\r\n          invoker(action, ...defaltArgs) {\r\n            const invokerData = {action, args: defaltArgs};\r\n            if (\r\n              action[invokerData] &&\r\n              invokerData.action === action &&\r\n              shallowCompare(defaltArgs, action[invokerData].args)\r\n            )\r\n              return action[invokerData];\r\n            action[invokerData] = invokerData;\r\n            return function (...args) {\r\n              return invoke(action, ...defaltArgs.concat(args));\r\n            };\r\n          }\r\n        }) || props;\r\n        Object.assign(this, {\r\n          onDidMount,\r\n          onWillUnmount,\r\n          onRender\r\n        });\r\n        const hasChange = !shallowCompare(mappedProps, this.mappedProps);\r\n        if (hasChange) {\r\n          this.mappedProps = mappedProps;\r\n        }\r\n        return hasChange;\r\n      }\r\n\r\n      componentDidMount() {\r\n        if (this.onDidMount) {\r\n          this.onDidMount(this);\r\n        }\r\n        this.unsubscribe = subscribe(() => {\r\n          if (!this.updateProp(this.props)) return false;\r\n          this.forceUpdate();\r\n        });\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        if (this.onWillUnmount) {\r\n          this.onWillUnmount(this);\r\n        }\r\n        this.unsubscribe();\r\n      }\r\n\r\n      shouldComponentUpdate(nextProps) {\r\n        return this.updateProp(nextProps);\r\n      }\r\n\r\n      render() {\r\n        if (this.onRender) {\r\n          this.onRender(this);\r\n        }\r\n        return React.createElement(Component, this.mappedProps);\r\n      }\r\n    };\r\n  }\r\n\r\n  return Object.assign(app, {\r\n    subscribe,\r\n    component,\r\n    async,\r\n    invoke\r\n  });\r\n}"]}